Enum "dimension_unit" {
  "count"
  "percent"
}

Enum "event_handlers_target_enum" {
  "page"
  "component"
  "data_query"
  "table_column"
  "table_action"
}

Enum "layput_type" {
  "desktop"
  "mobile"
}

Enum "scope" {
  "local"
  "global"
}

Enum "source" {
  "signup"
  "invite"
  "google"
  "git"
  "workspace_signup"
}

Enum "status" {
  "invited"
  "verified"
  "active"
  "archived"
}

Enum "type" {
  "static"
  "default"
  "sample"
}

Enum "variable_type" {
  "client"
  "server"
}

Table "app_environments" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "default" bool [not null, default: false]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "organization_id" uuid [not null]
  "priority" int4 [default: 1]
  "enabled" bool [not null, default: true]

  Indexes {
    (organization_id, priority) [unique, name: "unique_organization_id_priority"]
  }
}

Table "app_group_permissions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "app_id" uuid [not null]
  "group_permission_id" uuid [not null]
  "read" bool [not null, default: false]
  "update" bool [not null, default: false]
  "delete" bool [not null, default: false]
  "created_at" timestamp(6) [not null, default: `now()`]
  "updated_at" timestamp(6) [not null, default: `now()`]
  "hide_from_dashboard" bool [not null, default: false]
}

Table "app_users" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "app_id" uuid [not null]
  "user_id" uuid [not null]
  "role" varchar [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "app_versions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar
  "definition" json
  "app_id" uuid [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "current_environment_id" uuid
  "global_settings" json
  "show_viewer_navigation" bool [not null, default: true]
  "home_page_id" uuid

  Indexes {
    (name, app_id) [unique, name: "name_app_id_app_versions_unique"]
  }
}

Table "apps" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar
  "slug" varchar [unique]
  "user_id" uuid [not null]
  "current_version_id" uuid
  "is_public" bool
  "organization_id" uuid [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "icon" varchar(255) [default: `''::charactervarying`]
  "is_maintenance_on" bool [not null, default: false]

  Indexes {
    (name, organization_id) [unique, name: "app_name_organization_id_unique"]
  }
}

Table "comment_users" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "comment_id" uuid [not null]
  "user_id" uuid [not null]
  "is_read" bool [default: false]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "comments" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "thread_id" uuid [not null]
  "app_versions_id" uuid
  "organization_id" uuid [not null]
  "comment" varchar [not null]
  "is_read" bool [default: false]
  "user_id" uuid
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "components" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "type" varchar [not null]
  "page_id" uuid [not null]
  "parent" varchar
  "properties" json
  "general_properties" json
  "styles" json
  "general_styles" json
  "display_preferences" json
  "validation" json
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]

  Indexes {
    name [type: btree, name: "IDX_673dc1c412adfb5b54ec419224"]
    type [type: btree, name: "IDX_dab02b08685ba25e5a59626992"]
    page_id [type: btree, name: "IDX_de521ef5844106d2b2033dd2d8"]
  }
}

Table "credentials" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "value_ciphertext" varchar
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "data_queries" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "data_source_id" uuid
  "name" varchar
  "options" json
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "app_version_id" uuid
}

Table "data_source_options" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "data_source_id" uuid [not null]
  "environment_id" uuid [not null]
  "options" json
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]

  Indexes {
    (data_source_id, environment_id) [unique, name: "data_source_env_data_source_options_unique"]
  }
}

Table "data_source_user_oauth2s" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "user_id" uuid [not null]
  "data_source_id" uuid [not null]
  "options_ciphertext" varchar [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "data_sources" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "kind" varchar [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "app_version_id" uuid
  "plugin_id" uuid
  "organization_id" uuid
  "type" "public"."public".type [not null, default: `'default'::type`]
  "scope" "public"."public".scope [not null, default: `'local'::scope`]
}

Table "event_handlers" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "index" int4 [not null]
  "event" jsonb [not null]
  "app_version_id" uuid [not null]
  "source_id" varchar [not null]
  "target" "public"."public".event_handlers_target_enum [not null, default: `'page'::event_handlers_target_enum`]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "files" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "data" jsonb [not null]
  "filename" varchar [not null]
}

Table "folder_apps" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "folder_id" uuid [not null]
  "app_id" uuid [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "folders" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar
  "organization_id" uuid [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]

  Indexes {
    (name, organization_id) [unique, name: "folder_name_organization_id_unique"]
  }
}

Table "group_permissions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "organization_id" uuid [not null]
  "group" varchar [not null]
  "created_at" timestamp(6) [not null, default: `now()`]
  "updated_at" timestamp(6) [not null, default: `now()`]
  "app_create" bool [not null, default: false]
  "app_delete" bool [not null, default: false]
  "folder_create" bool [not null, default: false]
  "folder_delete" bool [not null, default: false]
  "folder_update" bool [not null, default: false]
  "org_environment_variable_create" bool [not null, default: false]
  "org_environment_variable_update" bool [not null, default: false]
  "org_environment_variable_delete" bool [not null, default: false]
  "org_environment_constant_create" bool [not null, default: false]
  "org_environment_constant_delete" bool [not null, default: false]

  Indexes {
    (organization_id, group) [unique, name: "UQ_9cb4cc225c96246e4d1b2e614bf"]
  }
}

Table "internal_tables" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "organization_id" uuid [not null]
  "table_name" varchar [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]

  Indexes {
    (organization_id, table_name) [unique, name: "organization_id_table_name_unique"]
  }
}

Table "layouts" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "type" "public"."public".layput_type [not null]
  "top" float8
  "left" float8
  "width" float8
  "height" float8
  "component_id" uuid [not null]
  "dimension_unit" "public"."public".dimension_unit [not null, default: `'percent'::dimension_unit`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "metadata" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "data" json
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "migrations" {
  "id" int4 [pk, not null, default: `nextval('migrations_id_seq'::regclass)`]
  "timestamp" int8 [not null]
  "name" varchar [not null]
}

Table "org_environment_constant_values" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "organization_constant_id" uuid [not null]
  "environment_id" uuid [not null]
  "value" varchar
  "created_at" timestamp(6) [not null, default: `now()`]
  "updated_at" timestamp(6) [not null, default: `now()`]

  Indexes {
    (organization_constant_id, environment_id) [unique, name: "UQ_88c9a33b0ea9d9d5ac9b3d7ac71"]
  }
}

Table "org_environment_variables" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "organization_id" uuid [not null]
  "variable_name" varchar [not null]
  "value" varchar [not null]
  "variable_type" "public"."public".variable_type [not null]
  "encrypted" bool [not null, default: false]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]

  Indexes {
    (organization_id, variable_name, variable_type) [unique, name: "UQ_336d8c341188f36c2b2eb32cabe"]
  }
}

Table "organization_constants" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "constant_name" varchar [not null]
  "organization_id" uuid [not null]
  "created_at" timestamp(6) [not null, default: `now()`]
  "updated_at" timestamp(6) [not null, default: `now()`]

  Indexes {
    (constant_name, organization_id) [unique, name: "UQ_0619f60991924d2aca5152cb5c7"]
  }
}

Table "organization_users" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "organization_id" uuid [not null]
  "user_id" uuid [not null]
  "role" varchar [not null]
  "status" varchar [not null, default: `'invited'::charactervarying`]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "invitation_token" varchar
  "source" "public"."public".source [not null, default: `'invite'::source`]

  Indexes {
    (organization_id, user_id) [unique, name: "user_organization_unique"]
  }
}

Table "organizations" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [unique]
  "domain" varchar
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "enable_sign_up" bool [not null, default: false]
  "inherit_sso" bool [not null, default: true]
  "slug" varchar(50) [unique]
}

Table "pages" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "name" varchar [not null]
  "index" int4 [not null]
  "page_handle" varchar [not null]
  "disabled" bool
  "hidden" bool
  "app_version_id" uuid [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "auto_compute_layout" bool [not null, default: false]
}

Table "plugins" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "plugin_id" varchar [not null]
  "name" varchar [not null]
  "repo" varchar [not null]
  "description" varchar [not null]
  "version" varchar [not null]
  "index_file_id" uuid [not null]
  "operations_file_id" uuid [not null]
  "icon_file_id" uuid [not null]
  "manifest_file_id" uuid [not null]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "sso_configs" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "organization_id" uuid [not null]
  "sso" varchar [not null]
  "configs" json
  "enabled" bool [not null, default: true]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
}

Table "threads" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "x" varchar
  "y" varchar
  "app_id" uuid [not null]
  "organization_id" uuid [not null]
  "app_versions_id" uuid
  "user_id" uuid
  "is_resolved" bool [default: false]
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "page_id" varchar
}

Table "typeorm_metadata" {
  "type" varchar [not null]
  "database" varchar
  "schema" varchar
  "table" varchar
  "name" varchar
  "value" text
}

Table "user_group_permissions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "user_id" uuid [not null]
  "group_permission_id" uuid [not null]
  "created_at" timestamp(6) [not null, default: `now()`]
  "updated_at" timestamp(6) [not null, default: `now()`]
}

Table "user_sessions" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "user_id" uuid [not null]
  "device" varchar [not null, default: `'unknown'::charactervarying`]
  "created_at" timestamp(6) [not null, default: `now()`]
  "expiry" timestamp(6) [not null]
}

Table "users" {
  "id" uuid [pk, not null, default: `gen_random_uuid()`]
  "first_name" varchar
  "last_name" varchar
  "email" varchar [unique]
  "password_digest" varchar
  "invitation_token" varchar
  "forgot_password_token" varchar
  "organization_id" uuid
  "created_at" timestamp(6) [default: `now()`]
  "updated_at" timestamp(6) [default: `now()`]
  "role" varchar [not null, default: `''::charactervarying`]
  "avatar_id" uuid
  "password_retry_count" int2 [not null, default: 0]
  "company_size" varchar
  "company_name" varchar
  "status" "public"."public".status [not null, default: `'invited'::status`]
  "source" "public"."public".source [not null, default: `'invite'::source`]
  "phone_number" varchar
}

Ref "app_environments_organization_id_organizations_id_fk":"organizations"."id" < "app_environments"."organization_id" [update: no action, delete: cascade]

Ref "app_group_permissions_app_id_apps_id_fk":"apps"."id" < "app_group_permissions"."app_id" [update: no action, delete: cascade]

Ref "app_group_permissions_group_permission_id_group_permissions_id_":"group_permissions"."id" < "app_group_permissions"."group_permission_id" [update: no action, delete: cascade]

Ref "app_users_app_id_apps_id_fk":"apps"."id" < "app_users"."app_id" [update: no action, delete: cascade]

Ref "app_users_user_id_users_id_fk":"users"."id" < "app_users"."user_id" [update: no action, delete: cascade]

Ref "app_versions_app_id_apps_id_fk":"apps"."id" < "app_versions"."app_id" [update: no action, delete: cascade]

Ref "app_versions_current_environment_id_app_environments_id_fk":"app_environments"."id" < "app_versions"."current_environment_id" [update: no action, delete: no action]

Ref "apps_organization_id_organizations_id_fk":"organizations"."id" < "apps"."organization_id" [update: no action, delete: cascade]

Ref "comment_users_comment_id_comments_id_fk":"comments"."id" < "comment_users"."comment_id" [update: no action, delete: cascade]

Ref "comment_users_user_id_users_id_fk":"users"."id" < "comment_users"."user_id" [update: no action, delete: no action]

Ref "comments_app_versions_id_app_versions_id_fk":"app_versions"."id" < "comments"."app_versions_id" [update: no action, delete: cascade]

Ref "comments_organization_id_organizations_id_fk":"organizations"."id" < "comments"."organization_id" [update: no action, delete: cascade]

Ref "comments_thread_id_threads_id_fk":"threads"."id" < "comments"."thread_id" [update: no action, delete: cascade]

Ref "comments_user_id_users_id_fk":"users"."id" < "comments"."user_id" [update: no action, delete: cascade]

Ref "components_page_id_pages_id_fk":"pages"."id" < "components"."page_id" [update: no action, delete: cascade]

Ref "data_queries_app_version_id_app_versions_id_fk":"app_versions"."id" < "data_queries"."app_version_id" [update: no action, delete: cascade]

Ref "data_queries_data_source_id_data_sources_id_fk":"data_sources"."id" < "data_queries"."data_source_id" [update: no action, delete: cascade]

Ref "data_source_options_data_source_id_data_sources_id_fk":"data_sources"."id" < "data_source_options"."data_source_id" [update: no action, delete: cascade]

Ref "data_source_options_environment_id_app_environments_id_fk":"app_environments"."id" < "data_source_options"."environment_id" [update: no action, delete: cascade]

Ref "data_source_user_oauth2s_data_source_id_data_sources_id_fk":"data_sources"."id" < "data_source_user_oauth2s"."data_source_id" [update: no action, delete: cascade]

Ref "data_source_user_oauth2s_user_id_users_id_fk":"users"."id" < "data_source_user_oauth2s"."user_id" [update: no action, delete: cascade]

Ref "data_sources_app_version_id_app_versions_id_fk":"app_versions"."id" < "data_sources"."app_version_id" [update: no action, delete: cascade]

Ref "data_sources_organization_id_organizations_id_fk":"organizations"."id" < "data_sources"."organization_id" [update: no action, delete: no action]

Ref "data_sources_plugin_id_plugins_id_fk":"plugins"."id" < "data_sources"."plugin_id" [update: no action, delete: cascade]

Ref "event_handlers_app_version_id_app_versions_id_fk":"app_versions"."id" < "event_handlers"."app_version_id" [update: no action, delete: cascade]

Ref "folder_apps_app_id_apps_id_fk":"apps"."id" < "folder_apps"."app_id" [update: no action, delete: cascade]

Ref "folder_apps_folder_id_folders_id_fk":"folders"."id" < "folder_apps"."folder_id" [update: no action, delete: cascade]

Ref "folders_organization_id_organizations_id_fk":"organizations"."id" < "folders"."organization_id" [update: no action, delete: cascade]

Ref "group_permissions_organization_id_organizations_id_fk":"organizations"."id" < "group_permissions"."organization_id" [update: no action, delete: cascade]

Ref "internal_tables_organization_id_organizations_id_fk":"organizations"."id" < "internal_tables"."organization_id" [update: no action, delete: cascade]

Ref "layouts_component_id_components_id_fk":"components"."id" < "layouts"."component_id" [update: no action, delete: cascade]

Ref "org_environment_constant_values_environment_id_app_environments":"app_environments"."id" < "org_environment_constant_values"."environment_id" [update: no action, delete: cascade]

Ref "org_environment_constant_values_organization_constant_id_organi":"organization_constants"."id" < "org_environment_constant_values"."organization_constant_id" [update: no action, delete: cascade]

Ref "org_environment_variables_organization_id_organizations_id_fk":"organizations"."id" < "org_environment_variables"."organization_id" [update: no action, delete: cascade]

Ref "organization_users_organization_id_organizations_id_fk":"organizations"."id" < "organization_users"."organization_id" [update: no action, delete: cascade]

Ref "organization_users_user_id_users_id_fk":"users"."id" < "organization_users"."user_id" [update: no action, delete: cascade]

Ref "pages_app_version_id_app_versions_id_fk":"app_versions"."id" < "pages"."app_version_id" [update: no action, delete: cascade]

Ref "plugins_icon_file_id_files_id_fk":"files"."id" < "plugins"."icon_file_id" [update: no action, delete: no action]

Ref "plugins_index_file_id_files_id_fk":"files"."id" < "plugins"."index_file_id" [update: no action, delete: no action]

Ref "plugins_manifest_file_id_files_id_fk":"files"."id" < "plugins"."manifest_file_id" [update: no action, delete: no action]

Ref "plugins_operations_file_id_files_id_fk":"files"."id" < "plugins"."operations_file_id" [update: no action, delete: no action]

Ref "sso_configs_organization_id_organizations_id_fk":"organizations"."id" < "sso_configs"."organization_id" [update: no action, delete: cascade]

Ref "threads_app_id_apps_id_fk":"apps"."id" < "threads"."app_id" [update: no action, delete: cascade]

Ref "threads_app_versions_id_app_versions_id_fk":"app_versions"."id" < "threads"."app_versions_id" [update: no action, delete: cascade]

Ref "threads_organization_id_organizations_id_fk":"organizations"."id" < "threads"."organization_id" [update: no action, delete: cascade]

Ref "threads_user_id_users_id_fk":"users"."id" < "threads"."user_id" [update: no action, delete: cascade]

Ref "user_group_permissions_group_permission_id_group_permissions_id":"group_permissions"."id" < "user_group_permissions"."group_permission_id" [update: no action, delete: cascade]

Ref "user_group_permissions_user_id_users_id_fk":"users"."id" < "user_group_permissions"."user_id" [update: no action, delete: cascade]

Ref "user_sessions_user_id_users_id_fk":"users"."id" < "user_sessions"."user_id" [update: no action, delete: cascade]

Ref "users_organization_id_organizations_id_fk":"organizations"."id" < "users"."organization_id" [update: no action, delete: cascade]
